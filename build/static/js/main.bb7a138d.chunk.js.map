{"version":3,"sources":["Reducer.js","context.js","components/Slider.js","components/Loading.js","components/Banner.js","components/PokLoad.js","components/Pokemons.js","pages/Home.js","pages/Favourite.js","pages/SinglePage.js","App.js","index.js"],"names":["Reducer","state","action","type","payLoad","featured","pokemonList","favList","mainList","sliderLoad","pokemonLoad","temp","map","item","isFav","id","tempMain","jsonObject","JSON","stringify","uniqueSet","Set","Array","from","parse","filter","newtemp","AppContext","React","createContext","initialState","AppProvider","children","useReducer","dispatch","useState","urlList","setUrlList","page","useEffect","slidercount","listcount","getFeatured","a","fetch","response","json","data","results","result","url","getSingle","resList","listData","getList","link","category","singleResponse","dataSingle","abilities","base_experience","height","name","sprites","weight","ability","pokImage","other","dream_world","front_default","singlePok","bex","h","nam","image","w","setTimeout","urlData","getUrls","res","next","previous","Provider","value","handleFav","handleNext","handlePrev","removeFav","console","log","useGlobalContext","useContext","SwiperCore","use","Pagination","Navigation","Slider","className","slidesPerView","spaceBetween","loop","loopFillGroupWithBlank","pagination","clickable","navigation","breakpoints","to","src","alt","index","Loading","boxColor","style","marginBottom","desktopSize","mobileSize","Banner","PokLoad","meshColor","lightColor","duration","Pokemons","onClick","Home","Favourite","length","SinglePage","useParams","info","setInfo","singleLoad","setSingleLoad","moves","stats","types","move","mainImg","stat","base","base_stat","able","movement","img","fetchSingle","labels","chartData","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb7a138d.chunk.js","sourcesContent":["export const Reducer = (state, action) => {\r\n  const { type, payLoad } = action;\r\n  let { featured, pokemonList, favList, mainList} = state;\r\n  if (type === \"SETSLIDERLOAD TRUE\") {\r\n    return { ...state, sliderLoad: true };\r\n  }\r\n  if (type === \"SETSLIDERLOAD FALSE\") {\r\n    return { ...state, sliderLoad: false };\r\n  }\r\n  if (type === \"SETPOKEMONLOAD TRUE\") {\r\n    return { ...state, pokemonLoad: true };\r\n  }\r\n  if (type === \"SETPOKEMONLOAD FALSE\") {\r\n    return { ...state, pokemonLoad: false };\r\n  }\r\n  if (type === \"ADD POKEMON\") {\r\n    return { ...state, featured: [...featured, payLoad] };\r\n  }\r\n  if (type === \"ADD POKEMONS\") {\r\n    return { ...state, pokemonList: [...pokemonList, payLoad],mainList:[...mainList,payLoad] };\r\n  }\r\n  if (type === \"TOGGLE FAV\") {\r\n    const temp = pokemonList.map((item) => {\r\n      const {isFav} = item\r\n      if (payLoad === item.id) {\r\n       return {...item,isFav:!isFav}\r\n      }\r\n      return item;\r\n    });\r\n    const tempMain = mainList.map((item)=>{\r\n      const {isFav} = item\r\n      if (payLoad === item.id) {\r\n        return {...item,isFav:!isFav}\r\n       }\r\n       return item;\r\n    })\r\n   \r\n    \r\n    return {...state,pokemonList:temp,mainList:tempMain};\r\n  }\r\n \r\n  if(type==='ADD FAV'){\r\n    let jsonObject = mainList.map(JSON.stringify)\r\n    let uniqueSet = new Set(jsonObject);\r\n    let  uniqueArray = Array.from(uniqueSet).map(JSON.parse);\r\n    const temp = uniqueArray.filter((item)=>{\r\n      return item.isFav===true\r\n    })\r\n    \r\n    return {...state,favList:temp}\r\n  }\r\n  if(type=== \"REMOVE FAV\")\r\n  {\r\n    const temp = favList.filter((item)=>{\r\n      return item.id!==payLoad\r\n    })\r\n    const newtemp = pokemonList.map((item) => {\r\n      if (payLoad === item.id) {\r\n       return {...item,isFav:false}\r\n      }\r\n      return item;\r\n    });\r\n    return {...state,favList:temp,pokemonList:newtemp}\r\n  }\r\n  if(type===\"EMPTYLIST\")\r\n  {\r\n    return {...state,pokemonList:[]}\r\n  }\r\n  if(type===\"EMPTY FEATURED\")\r\n  {\r\n    return{...state,featured:[]}\r\n  }\r\n};\r\n","import React, { useReducer, useContext, useEffect, useState } from \"react\";\r\nimport { Reducer } from \"./Reducer\";\r\n\r\nconst urlFeauture = \"https://pokeapi.co/api/v2/pokemon/?offset=34&limit=6\";\r\nconst AppContext = React.createContext();\r\nconst initialState = {\r\n  featured: [],\r\n  pokemonList: [],\r\n  favList: [],\r\n  sliderLoad: true,\r\n  pokemonLoad: false,\r\n  mainList: [],\r\n};\r\nconst AppProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(Reducer, initialState);\r\n  const { featured, pokemonList, favList, sliderLoad, pokemonLoad, mainList } =\r\n    state;\r\n\r\n  const [urlList, setUrlList] = useState(\r\n    \"https://pokeapi.co/api/v2/pokemon/?offset=400&limit=15\"\r\n  );\r\n  let page = \"\";\r\n  // getting the urls for slider\r\n  // getting the url for pokemon list display\r\n  useEffect(() => {\r\n    let slidercount = 0;\r\n    let listcount = 0;\r\n    const getFeatured = async () => {\r\n      dispatch({ type: \"SETSLIDERLOAD TRUE\" });\r\n      const response = await fetch(urlFeauture);\r\n      const data = await response.json();\r\n      const { results } = data;\r\n\r\n      results.map((result) => {\r\n        const { url } = result;\r\n        getSingle(url, \"slider\");\r\n        return result;\r\n      });\r\n    };\r\n    if (listcount === 0) {\r\n      dispatch({ type: \"EMPTY FEATURED\" });\r\n\r\n      getFeatured();\r\n    }\r\n\r\n    const getList = async () => {\r\n      dispatch({ type: \"SETPOKEMONLOAD TRUE\" });\r\n      const resList = await fetch(urlList);\r\n      const listData = await resList.json();\r\n      const { results } = listData;\r\n      results.map((result) => {\r\n        const { url } = result;\r\n        getSingle(url, \"list\");\r\n        return result;\r\n      });\r\n    };\r\n    getList();\r\n\r\n    //getting the data for every url\r\n\r\n    const getSingle = async (link, category) => {\r\n      const singleResponse = await fetch(link);\r\n      const dataSingle = await singleResponse.json();\r\n      if (category === \"slider\") slidercount++;\r\n      if (category === \"list\") listcount++;\r\n      let { abilities, base_experience, height, id, name, sprites, weight } =\r\n        dataSingle;\r\n      let ability = abilities.map((item) => {\r\n        return item.ability.name;\r\n      });\r\n\r\n      let pokImage = sprites.other.dream_world.front_default;\r\n      let singlePok = {\r\n        ability: ability,\r\n        bex: base_experience,\r\n        h: height,\r\n        id: id,\r\n        nam: name,\r\n        image: pokImage,\r\n        w: weight,\r\n        isFav: false,\r\n      };\r\n      if (category === \"slider\")\r\n        dispatch({ type: \"ADD POKEMON\", payLoad: singlePok });\r\n      if (category === \"list\")\r\n        dispatch({ type: \"ADD POKEMONS\", payLoad: singlePok });\r\n      if (slidercount === 6) {\r\n        setTimeout(() => {\r\n          dispatch({ type: \"SETSLIDERLOAD FALSE\" });\r\n        }, 2000);\r\n      }\r\n      if (listcount === 15) {\r\n        setTimeout(() => {\r\n          dispatch({ type: \"SETPOKEMONLOAD FALSE\" });\r\n        }, 2000);\r\n      }\r\n    };\r\n  }, [urlList]);\r\n\r\n  const handleFav = (id) => {\r\n    const favId = id;\r\n\r\n    dispatch({ type: \"TOGGLE FAV\", payLoad: favId });\r\n\r\n    dispatch({ type: \"ADD FAV\" });\r\n  };\r\n\r\n  let urlData;\r\n  const getUrls = async () => {\r\n    const res = await fetch(urlList);\r\n    urlData = await res.json();\r\n   \r\n    const { next, previous } = urlData;\r\n\r\n    if (page === \"next\") {\r\n      setUrlList(next);\r\n     \r\n    }\r\n    if (page === \"prev\" && previous) {\r\n     \r\n      setUrlList(previous);\r\n    }\r\n  };\r\n  const handleNext = () => {\r\n    dispatch({ type: \"EMPTYLIST\" });\r\n    page = \"next\";\r\n    getUrls();\r\n   \r\n  };\r\n  const handlePrev = () => {\r\n    dispatch({ type: \"EMPTYLIST\" });\r\n    page = \"prev\";\r\n    getUrls();\r\n    \r\n  };\r\n\r\n  const removeFav = (id) => {\r\n    console.log(\"remove\");\r\n    dispatch({ type: \"REMOVE FAV\",payLoad:id });\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        featured,\r\n        pokemonList,\r\n        favList,\r\n        sliderLoad,\r\n        pokemonLoad,\r\n        mainList,\r\n        handleFav,\r\n        handleNext,\r\n        handlePrev,\r\n        removeFav,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n","import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Link } from 'react-router-dom'\r\nimport \"swiper/swiper.min.css\";\r\nimport \"swiper/components/pagination/pagination.min.css\";\r\nimport \"swiper/components/navigation/navigation.min.css\";\r\nimport SwiperCore, { Pagination, Navigation } from \"swiper/core\";\r\nimport \"../styles/slider.css\";\r\nimport { useGlobalContext } from \"../context\";\r\n\r\nSwiperCore.use([Pagination, Navigation]);\r\nexport const Slider = () => {\r\n  const { featured } = useGlobalContext();\r\n      \r\n  return (\r\n    <div className=\"pok-slider\">\r\n      <Swiper\r\n        slidesPerView={1}\r\n        spaceBetween={30}\r\n       \r\n        loop={true}\r\n        loopFillGroupWithBlank={true}\r\n        pagination={{\r\n          clickable: true,\r\n        }}\r\n        navigation={true}\r\n        breakpoints={{\r\n                \r\n          1050:{\r\n            slidesPerView: 2,\r\n            spaceBetween: 40,\r\n          },\r\n          1350: {\r\n            slidesPerView: 3,\r\n            spaceBetween: 50,\r\n          },\r\n        }}\r\n        className=\"mySwiper\"\r\n      >\r\n        {featured.map((item) => {\r\n          const { ability, bex, h, id, image, nam, w } = item;\r\n          return (\r\n            <SwiperSlide key={id}>\r\n              <div className=\"pokemon\">\r\n                <div className=\"upper-wrapper\">\r\n                  <div className=\"upper\">\r\n                    <div className=\"image\">\r\n                    <Link to={`/pokemons/${nam}`}><img src={image} alt=\"\" /></Link>\r\n                    </div>\r\n                    <Link to={`/pokemons/${nam}`} className='name-btn'>{nam}</Link>\r\n                  </div>\r\n                </div>\r\n                <div className=\"lower\">\r\n                  <div className=\"ability\">\r\n                    <p>Ability </p>\r\n                    {ability.map((item,index) => {\r\n                      return <p key={index} className=\"ability-btn\">{item}</p>;\r\n                    })}\r\n                  </div>\r\n                  <div className=\"bex\">\r\n                    <p>Base-experience </p>\r\n                    <p className=\"ability-btn\">{bex}</p>\r\n                  </div>\r\n                  <div className=\"h-w\">\r\n                    <div className=\"height\">\r\n                      <span>Height</span>\r\n                      <p className=\"ability-btn\">{h}</p>\r\n                    </div>\r\n                    <div className=\"weight\">\r\n                      <span>Weight</span>\r\n                      <p className=\"ability-btn\">{w}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </SwiperSlide>\r\n          );\r\n        })}\r\n      </Swiper>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { BoxesLoader } from \"react-awesome-loaders\";\r\nimport \"../styles/loading.css\";\r\nexport const Loading = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <BoxesLoader\r\n        boxColor={\"#9A0F9A\"}\r\n        style={{ marginBottom: \"20px\" }}\r\n        desktopSize={\"128px\"}\r\n        mobileSize={\"80px\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { Slider } from './Slider'\r\nimport { Link } from \"react-router-dom\";\r\nimport { useGlobalContext } from \"../context\";\r\nimport { Loading } from \"../components/Loading\";\r\n\r\nimport '../styles/banner.css'\r\nexport const Banner = () => {\r\n    const {sliderLoad} = useGlobalContext(); \r\n    if (sliderLoad) {\r\n      return <Loading />;\r\n    }  \r\n    return (\r\n        <div className='banner'>\r\n            <h1 className=\"banner-heading\">Welcome to the Pokemon Library</h1>\r\n            <div className=\"navbar\">\r\n                <ul className=\"nav-links\">\r\n                    <li><Link to='/'>Home</Link></li>\r\n                    <li><Link to='/favourite'>Favourites</Link></li>\r\n                  \r\n                </ul>\r\n            </div>\r\n            <div className=\"heading-box\">\r\n            <div className=\"left\"></div>\r\n            <h2>Featured Pokemons</h2>\r\n            <div className=\"right\"></div>\r\n            </div>\r\n            <Slider/>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { CircleLoader } from \"react-awesome-loaders\";\r\nimport \"../styles/pokLoad.css\";\r\n\r\nexport const PokLoad = () => {\r\n  return (\r\n    <div className='pokLoad'>\r\n      \r\n       <CircleLoader\r\n        meshColor={\"#9A0F9A\"}\r\n        lightColor={\"#E0E7FF\"}\r\n        duration={1.5}\r\n        desktopSize={\"90px\"}\r\n        mobileSize={\"64px\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { ImHeart } from \"react-icons/im\";\r\nimport { FaArrowAltCircleLeft, FaArrowAltCircleRight } from \"react-icons/fa\";\r\nimport { useGlobalContext } from \"../context\";\r\nimport { PokLoad } from \"../components/PokLoad\";\r\nimport \"../styles/pokemonlist.css\";\r\nexport const Pokemons = () => {\r\n  const { pokemonList, pokemonLoad, handleFav, handleNext, handlePrev } = useGlobalContext();\r\n \r\n    if (pokemonLoad) {\r\n      return <PokLoad />;\r\n    }  \r\n  \r\n  return (\r\n    <div className=\"pokemon-wrapper\">\r\n      <div className=\"heading-box fill\">\r\n            <div className=\"left fill\"></div>\r\n            <h2>Pokemons</h2>\r\n            <div className=\"right fill\"></div>\r\n            </div>\r\n      <div className=\"page-btn\">\r\n        <p className=\"prev-btn\" onClick={() => handlePrev()}>\r\n          <FaArrowAltCircleLeft className=\"prev\" />\r\n          Prev\r\n        </p>\r\n\r\n        <p className=\"next-btn\" onClick={() => handleNext()}>\r\n          Next\r\n          <FaArrowAltCircleRight className=\"next\" />\r\n        </p>\r\n      </div>\r\n      <div className=\"pokemon-center\">\r\n        {pokemonList.map((item) => {\r\n          const { ability, bex, h, id, image, nam, w, isFav } = item;\r\n          return (\r\n            <div className=\"list-pok\" key={id}>\r\n              <div className=\"upper-wrapper\">\r\n                <div className=\"upper\">\r\n                  <div className=\"image\">\r\n                  <Link to={`/pokemons/${nam}`}><img src={image} alt=\"\" /></Link>\r\n                  </div>\r\n                  <Link to={`/pokemons/${nam}`} className='name-btn'>{nam}</Link>\r\n      \r\n                  <div className=\"fav\">\r\n                    <p className=\"fav-btn\">Add to favourites</p>\r\n                    <ImHeart\r\n                      className={isFav ? \"red heart\" : \"heart\"}\r\n                      onClick={() => handleFav(id)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"lower\">\r\n                <div className=\"ability\">\r\n                  <p>Ability: </p>\r\n                  {ability.map((item, index) => {\r\n                    return (\r\n                      <p key={index} className=\"ability-btn\">\r\n                        {item}\r\n                      </p>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <div className=\"bex\">\r\n                  <p>Base-experience </p>\r\n                  <p className=\"ability-btn\">{bex}</p>\r\n                </div>\r\n                <div className=\"h-w\">\r\n                  <div className=\"height\">\r\n                    <span>Height</span>\r\n                    <p className=\"ability-btn\">{h}</p>\r\n                  </div>\r\n                  <div className=\"weight\">\r\n                    <span>Weight</span>\r\n                    <p className=\"ability-btn\">{w}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"page-btn\">\r\n        <p className=\"prev-btn\" onClick={() => handlePrev()}>\r\n          <FaArrowAltCircleLeft className=\"prev\" />\r\n          Prev\r\n        </p>\r\n\r\n        <p className=\"next-btn\" onClick={() => handleNext()}>\r\n          Next\r\n          <FaArrowAltCircleRight className=\"next\" />\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Banner } from \"../components/Banner\";\r\nimport { Pokemons } from \"../components/Pokemons\";\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <Banner />\r\n      <Pokemons />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"../context\";\r\nimport { ImHeart } from \"react-icons/im\";\r\nimport { Link } from 'react-router-dom'\r\nimport \"../styles/favourite.css\";\r\nexport const Favourite = () => {\r\n  const { favList, removeFav } = useGlobalContext();\r\n  if (favList.length === 0) {\r\n    return (\r\n      <div className=\"favourite-wrapper\">\r\n        <div className=\"fav-banner\">\r\n          <div className=\"heading-box\">\r\n            <div className=\"left\"></div>\r\n            <h2>Your Favourites</h2>\r\n            <div className=\"right\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"fav-center-empty\">\r\n          <div className=\"nothing\">\r\n            <h1>No favourites added yet</h1>\r\n            <h2>\r\n              You can click on the little hearts on the cards to add your\r\n              favourite pokemon\r\n            </h2>\r\n            <Link to='/' className='back-btn'>Back</Link>\r\n          </div>\r\n        </div>\r\n       \r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"favourite-wrapper\">\r\n      <div className=\"fav-banner\">\r\n        <div className=\"heading-box\">\r\n          <div className=\"left\"></div>\r\n          <h2>Your Favourites</h2>\r\n          <div className=\"right\"></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"fav-center\">\r\n        {favList.map((item) => {\r\n          const { ability, bex, h, id, image, nam, w, isFav } = item;\r\n          return (\r\n            <div className=\"list-pok\" key={id}>\r\n              <div className=\"upper-wrapper\">\r\n                <div className=\"upper\">\r\n                  <div className=\"image\">\r\n                  <Link to={`/pokemons/${nam}`}><img src={image} alt=\"\" /></Link>\r\n                  \r\n                  </div>\r\n                  <Link to={`/pokemons/${nam}`} className='name-btn'>{nam}</Link>\r\n      \r\n                  <div className=\"fav\">\r\n                    <p className=\"fav-btn\">Add to favourites</p>\r\n                    <ImHeart\r\n                      className={isFav ? \"red heart\" : \"heart\"}\r\n                      onClick={() => removeFav(id)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"lower\">\r\n                <div className=\"ability\">\r\n                  <p>Ability </p>\r\n                  {ability.map((item, index) => {\r\n                    return (\r\n                      <p key={index} className=\"ability-btn\">\r\n                        {item}\r\n                      </p>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <div className=\"bex\">\r\n                  <p>Base-experience </p>\r\n                  <p className=\"ability-btn\">{bex}</p>\r\n                </div>\r\n                <div className=\"h-w\">\r\n                  <div className=\"height\">\r\n                    <span>Height</span>\r\n                    <p className=\"ability-btn\">{h}</p>\r\n                  </div>\r\n                  <div className=\"weight\">\r\n                    <span>Weight</span>\r\n                    <p className=\"ability-btn\">{w}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { PokLoad } from \"../components/PokLoad\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { GiBodyHeight } from \"react-icons/gi\";\r\nimport { FaWeight } from \"react-icons/fa\";\r\nimport { ImPower } from \"react-icons/im\";\r\nimport \"../styles/singlePage.css\";\r\nexport const SinglePage = () => {\r\n  const { nam } = useParams();\r\n  const [info, setInfo] = useState({});\r\n  const [singleLoad, setSingleLoad] = useState(true);\r\n  useEffect(() => {\r\n    const url = `https://pokeapi.co/api/v2/pokemon/${nam}/`;\r\n    const fetchSingle = async () => {\r\n      setSingleLoad(true);\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n      const {\r\n        abilities,\r\n        base_experience,\r\n        height,\r\n        moves,\r\n        name,\r\n        sprites,\r\n        stats,\r\n        types,\r\n        weight,\r\n      } = data;\r\n      let ability = abilities.map((item) => {\r\n        return item.ability.name;\r\n      });\r\n      let move = moves.map((item) => {\r\n        return item.move.name;\r\n      });\r\n      let mainImg = sprites.other.dream_world.front_default;\r\n      let stat = stats.map((item) => {\r\n        const { base_stat, stat } = item;\r\n        return { base: base_stat, category: stat.name };\r\n      });\r\n      let type = types.map((item) => {\r\n        return item.type.name;\r\n      });\r\n      const pokemonInfo = {\r\n        able: ability,\r\n        bex: base_experience,\r\n        h: height,\r\n        movement: move,\r\n        name: name,\r\n        img: mainImg,\r\n        stats: stat,\r\n        types: type,\r\n        w: weight,\r\n      };\r\n\r\n      setInfo(pokemonInfo);\r\n     \r\n        setSingleLoad(false);\r\n      \r\n    };\r\n    fetchSingle();\r\n  }, [nam]);\r\n\r\n  \r\n\r\n  if (singleLoad) {\r\n\r\n    return <PokLoad />;\r\n  } \r\n  else \r\n  {\r\n    const { able, bex, h, movement, name, img, stats, types, w } = info;\r\n   \r\n   let labels = [];\r\n   let chartData = []\r\n  for(let stat of stats){\r\n   labels = [...labels,stat.category]\r\n   chartData = [...chartData,stat.base]\r\n  }\r\n \r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: 'stats',\r\n        data:chartData,\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.8)',\r\n          'rgba(54, 162, 235, 0.8)',\r\n          'rgba(255, 206, 86, 0.8)',\r\n          'rgba(75, 192, 192, 0.8)',\r\n          'rgba(153, 102, 255, 0.8)',\r\n          'rgba(255, 159, 64, 0.8)',\r\n        ],\r\n        borderColor: [\r\n          'rgba(255, 99, 132, 1)',\r\n          'rgba(54, 162, 235, 1)',\r\n          'rgba(255, 206, 86, 1)',\r\n          'rgba(75, 192, 192, 1)',\r\n          'rgba(153, 102, 255, 1)',\r\n          'rgba(255, 159, 64, 1)',\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n    return (\r\n      <div className=\"single-wrapper\">\r\n        <div className=\"single-img-wrap\">\r\n          <div className=\"single-img\">\r\n            <img src={img} alt=\"\" />\r\n          </div>\r\n        </div>\r\n        <button className=\"name-btn single-btn\">{name}</button>\r\n        <div className=\"h-w-b\">\r\n          <div className=\"s-height\">\r\n            <GiBodyHeight />\r\n            <span> Height </span>\r\n            {h}\r\n          </div>\r\n          <div className=\"s-weight\">\r\n            <FaWeight />\r\n            <span> Weight </span>\r\n            {w}\r\n          </div>\r\n          <div className=\"s-bex\">\r\n            <ImPower />\r\n            <span> Base experince </span>\r\n            {bex}\r\n          </div>\r\n        </div>\r\n        <div className=\"info-wrapper\">\r\n          \r\n          <div className=\"stats\">\r\n            <h1>Statistics</h1>\r\n            <div className=\"stats-box\">\r\n            <Bar data={data} options={options} />\r\n            </div>\r\n          </div>\r\n          <div className=\"moves\">\r\n            <h1>Moves</h1>\r\n            <div className=\"moves-box\">\r\n              {movement.map((item, index) => {\r\n                return <p key={index}>{item}</p>;\r\n              })}\r\n            </div>\r\n          </div>\r\n         \r\n          <div className=\"s-ability\">\r\n          <h1>Abilities</h1>\r\n          <div className=\"ability-box\">\r\n            {\r\n              able.map((item,index)=>{\r\n                return <p key={index}>{item}</p>\r\n              })\r\n            }\r\n          </div>\r\n          </div>\r\n          <div className=\"s-types\">\r\n          <h1>Types</h1>\r\n          <div className=\"types-box\">\r\n            {\r\n              types.map((item,index)=>{\r\n                return <p key={index}>{item}</p>\r\n              })\r\n            }\r\n          </div>\r\n          </div>\r\n        </div>\r\n      <Link to='/' className='back-btn'>Back</Link>\r\n      </div>\r\n\r\n    );\r\n  }\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Home } from \"./pages/Home\";\nimport { Favourite } from \"./pages/Favourite\";\nimport { SinglePage } from \"./pages/SinglePage\";\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/favourite\">\n            <Favourite />\n          </Route>\n          <Route path=\"/pokemons/:nam\">\n            <SinglePage />\n          </Route>\n         \n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { AppProvider } from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n    <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}